#!/usr/bin/python
#
# Copyriht (C) Citrix Systems Inc.
#
# This program is free software; you can redistribute it and/or modify 
# it under the terms of the GNU Lesser General Public License as published 
# by the Free Software Foundation; version 2.1 only.
#
# This program is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
#
# A plugin for enabling thin lvhd on slaves

import sys
import XenAPIPlugin
import os
sys.path.append("/opt/xensource/sm/")
import util
import LVHDSR
import SRCommand
import lvhdutil
import lvutil
import pluginutil

ERROR_CODE_KEY = "errcode"
ERROR_MSG_KEY = "errmsg"

def enable_thin_lvhd(session, args):
    util.SMlog("Upgrading SR %s to thin provision on host %s" 
               % (args['sr_ref'], args['host_ref'])) 

    try:
        driver_info = LVHDSR.DRIVER_INFO
        cmd = SRCommand.SRCommand(driver_info)
        if util.is_master(session):
            util.SMlog("Cannot invoke plugin on master host")
            raise

        input_params = {}
        input_params['session_ref'] = session._session
        input_params['host_ref'] = args['host_ref']
        input_params['sr_ref'] = args['sr_ref']
        input_params['command'] = "LVHD.enable_thin_provisioning"
        srRecord = session.xenapi.SR.get_record(args['sr_ref'])
        input_params['sr_uuid'] = srRecord["uuid"]

        pbd_ref = util.find_my_pbd(session, args['host_ref'], args['sr_ref'])
        pbd = session.xenapi.PBD
        device_config = pbd.get_device_config(pbd_ref)
        input_params['device_config'] = device_config
        cmd.dconf = input_params['device_config']
        cmd.dconf['SRmaster'] = "false"
        device_path = "/dev/disk/mpInuse/" + device_config['SCSIid']
        if not os.path.exists(device_path):
            device_path = "/dev/disk/by-id/scsi-" + device_config['SCSIid']
        cmd.dconf['device'] = device_path
        cmd.params = input_params
        sr = LVHDSR.LVHDSR(cmd, srRecord["uuid"])
        sr.upgrade(srRecord["uuid"])
        return str(True)
    except:
        err_msg = {
            ERROR_CODE_KEY: 'EnableThinProvisionException',
            ERROR_MSG_KEY: 'EnableThinProvisionException: Enabling thin provision failed on SR [%s]'
            % srRecord["uuid"]
        }
        result = pluginutil.to_xml(err_msg)
        return result

if __name__ == "__main__":
    XenAPIPlugin.dispatch({
        "enable_thin_lvhd": enable_thin_lvhd})
